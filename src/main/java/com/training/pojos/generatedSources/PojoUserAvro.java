/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.training.pojos.generatedSources;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PojoUserAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5782906884073630545L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PojoUserAvro\",\"namespace\":\"com.training.pojos.generatedSources\",\"fields\":[{\"name\":\"name\",\"type\":[\"string\",\"null\"]},{\"name\":\"favorite_number\",\"type\":[\"int\",\"null\"]},{\"name\":\"favorite_color\",\"type\":[\"string\",\"null\"]},{\"name\":\"language\",\"type\":[\"string\",\"null\"]},{\"name\":\"nativePlace\",\"type\":[\"string\",\"null\"]},{\"name\":\"hobbies\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PojoUserAvro> ENCODER =
      new BinaryMessageEncoder<PojoUserAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PojoUserAvro> DECODER =
      new BinaryMessageDecoder<PojoUserAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<PojoUserAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<PojoUserAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PojoUserAvro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this PojoUserAvro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a PojoUserAvro from a ByteBuffer. */
  public static PojoUserAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.Integer favorite_number;
  @Deprecated public java.lang.CharSequence favorite_color;
  @Deprecated public java.lang.CharSequence language;
  @Deprecated public java.lang.CharSequence nativePlace;
  @Deprecated public java.lang.CharSequence hobbies;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PojoUserAvro() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param favorite_number The new value for favorite_number
   * @param favorite_color The new value for favorite_color
   * @param language The new value for language
   * @param nativePlace The new value for nativePlace
   * @param hobbies The new value for hobbies
   */
  public PojoUserAvro(java.lang.CharSequence name, java.lang.Integer favorite_number, java.lang.CharSequence favorite_color, java.lang.CharSequence language, java.lang.CharSequence nativePlace, java.lang.CharSequence hobbies) {
    this.name = name;
    this.favorite_number = favorite_number;
    this.favorite_color = favorite_color;
    this.language = language;
    this.nativePlace = nativePlace;
    this.hobbies = hobbies;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return favorite_number;
    case 2: return favorite_color;
    case 3: return language;
    case 4: return nativePlace;
    case 5: return hobbies;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: favorite_number = (java.lang.Integer)value$; break;
    case 2: favorite_color = (java.lang.CharSequence)value$; break;
    case 3: language = (java.lang.CharSequence)value$; break;
    case 4: nativePlace = (java.lang.CharSequence)value$; break;
    case 5: hobbies = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'favorite_number' field.
   * @return The value of the 'favorite_number' field.
   */
  public java.lang.Integer getFavoriteNumber() {
    return favorite_number;
  }

  /**
   * Sets the value of the 'favorite_number' field.
   * @param value the value to set.
   */
  public void setFavoriteNumber(java.lang.Integer value) {
    this.favorite_number = value;
  }

  /**
   * Gets the value of the 'favorite_color' field.
   * @return The value of the 'favorite_color' field.
   */
  public java.lang.CharSequence getFavoriteColor() {
    return favorite_color;
  }

  /**
   * Sets the value of the 'favorite_color' field.
   * @param value the value to set.
   */
  public void setFavoriteColor(java.lang.CharSequence value) {
    this.favorite_color = value;
  }

  /**
   * Gets the value of the 'language' field.
   * @return The value of the 'language' field.
   */
  public java.lang.CharSequence getLanguage() {
    return language;
  }

  /**
   * Sets the value of the 'language' field.
   * @param value the value to set.
   */
  public void setLanguage(java.lang.CharSequence value) {
    this.language = value;
  }

  /**
   * Gets the value of the 'nativePlace' field.
   * @return The value of the 'nativePlace' field.
   */
  public java.lang.CharSequence getNativePlace() {
    return nativePlace;
  }

  /**
   * Sets the value of the 'nativePlace' field.
   * @param value the value to set.
   */
  public void setNativePlace(java.lang.CharSequence value) {
    this.nativePlace = value;
  }

  /**
   * Gets the value of the 'hobbies' field.
   * @return The value of the 'hobbies' field.
   */
  public java.lang.CharSequence getHobbies() {
    return hobbies;
  }

  /**
   * Sets the value of the 'hobbies' field.
   * @param value the value to set.
   */
  public void setHobbies(java.lang.CharSequence value) {
    this.hobbies = value;
  }

  /**
   * Creates a new PojoUserAvro RecordBuilder.
   * @return A new PojoUserAvro RecordBuilder
   */
  public static com.training.pojos.generatedSources.PojoUserAvro.Builder newBuilder() {
    return new com.training.pojos.generatedSources.PojoUserAvro.Builder();
  }

  /**
   * Creates a new PojoUserAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PojoUserAvro RecordBuilder
   */
  public static com.training.pojos.generatedSources.PojoUserAvro.Builder newBuilder(com.training.pojos.generatedSources.PojoUserAvro.Builder other) {
    return new com.training.pojos.generatedSources.PojoUserAvro.Builder(other);
  }

  /**
   * Creates a new PojoUserAvro RecordBuilder by copying an existing PojoUserAvro instance.
   * @param other The existing instance to copy.
   * @return A new PojoUserAvro RecordBuilder
   */
  public static com.training.pojos.generatedSources.PojoUserAvro.Builder newBuilder(com.training.pojos.generatedSources.PojoUserAvro other) {
    return new com.training.pojos.generatedSources.PojoUserAvro.Builder(other);
  }

  /**
   * RecordBuilder for PojoUserAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PojoUserAvro>
    implements org.apache.avro.data.RecordBuilder<PojoUserAvro> {

    private java.lang.CharSequence name;
    private java.lang.Integer favorite_number;
    private java.lang.CharSequence favorite_color;
    private java.lang.CharSequence language;
    private java.lang.CharSequence nativePlace;
    private java.lang.CharSequence hobbies;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.training.pojos.generatedSources.PojoUserAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.favorite_number)) {
        this.favorite_number = data().deepCopy(fields()[1].schema(), other.favorite_number);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.favorite_color)) {
        this.favorite_color = data().deepCopy(fields()[2].schema(), other.favorite_color);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.language)) {
        this.language = data().deepCopy(fields()[3].schema(), other.language);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.nativePlace)) {
        this.nativePlace = data().deepCopy(fields()[4].schema(), other.nativePlace);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.hobbies)) {
        this.hobbies = data().deepCopy(fields()[5].schema(), other.hobbies);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing PojoUserAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.training.pojos.generatedSources.PojoUserAvro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.favorite_number)) {
        this.favorite_number = data().deepCopy(fields()[1].schema(), other.favorite_number);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.favorite_color)) {
        this.favorite_color = data().deepCopy(fields()[2].schema(), other.favorite_color);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.language)) {
        this.language = data().deepCopy(fields()[3].schema(), other.language);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.nativePlace)) {
        this.nativePlace = data().deepCopy(fields()[4].schema(), other.nativePlace);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.hobbies)) {
        this.hobbies = data().deepCopy(fields()[5].schema(), other.hobbies);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.training.pojos.generatedSources.PojoUserAvro.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.training.pojos.generatedSources.PojoUserAvro.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'favorite_number' field.
      * @return The value.
      */
    public java.lang.Integer getFavoriteNumber() {
      return favorite_number;
    }

    /**
      * Sets the value of the 'favorite_number' field.
      * @param value The value of 'favorite_number'.
      * @return This builder.
      */
    public com.training.pojos.generatedSources.PojoUserAvro.Builder setFavoriteNumber(java.lang.Integer value) {
      validate(fields()[1], value);
      this.favorite_number = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'favorite_number' field has been set.
      * @return True if the 'favorite_number' field has been set, false otherwise.
      */
    public boolean hasFavoriteNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'favorite_number' field.
      * @return This builder.
      */
    public com.training.pojos.generatedSources.PojoUserAvro.Builder clearFavoriteNumber() {
      favorite_number = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'favorite_color' field.
      * @return The value.
      */
    public java.lang.CharSequence getFavoriteColor() {
      return favorite_color;
    }

    /**
      * Sets the value of the 'favorite_color' field.
      * @param value The value of 'favorite_color'.
      * @return This builder.
      */
    public com.training.pojos.generatedSources.PojoUserAvro.Builder setFavoriteColor(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.favorite_color = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'favorite_color' field has been set.
      * @return True if the 'favorite_color' field has been set, false otherwise.
      */
    public boolean hasFavoriteColor() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'favorite_color' field.
      * @return This builder.
      */
    public com.training.pojos.generatedSources.PojoUserAvro.Builder clearFavoriteColor() {
      favorite_color = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'language' field.
      * @return The value.
      */
    public java.lang.CharSequence getLanguage() {
      return language;
    }

    /**
      * Sets the value of the 'language' field.
      * @param value The value of 'language'.
      * @return This builder.
      */
    public com.training.pojos.generatedSources.PojoUserAvro.Builder setLanguage(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.language = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'language' field has been set.
      * @return True if the 'language' field has been set, false otherwise.
      */
    public boolean hasLanguage() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'language' field.
      * @return This builder.
      */
    public com.training.pojos.generatedSources.PojoUserAvro.Builder clearLanguage() {
      language = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'nativePlace' field.
      * @return The value.
      */
    public java.lang.CharSequence getNativePlace() {
      return nativePlace;
    }

    /**
      * Sets the value of the 'nativePlace' field.
      * @param value The value of 'nativePlace'.
      * @return This builder.
      */
    public com.training.pojos.generatedSources.PojoUserAvro.Builder setNativePlace(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.nativePlace = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'nativePlace' field has been set.
      * @return True if the 'nativePlace' field has been set, false otherwise.
      */
    public boolean hasNativePlace() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'nativePlace' field.
      * @return This builder.
      */
    public com.training.pojos.generatedSources.PojoUserAvro.Builder clearNativePlace() {
      nativePlace = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'hobbies' field.
      * @return The value.
      */
    public java.lang.CharSequence getHobbies() {
      return hobbies;
    }

    /**
      * Sets the value of the 'hobbies' field.
      * @param value The value of 'hobbies'.
      * @return This builder.
      */
    public com.training.pojos.generatedSources.PojoUserAvro.Builder setHobbies(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.hobbies = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'hobbies' field has been set.
      * @return True if the 'hobbies' field has been set, false otherwise.
      */
    public boolean hasHobbies() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'hobbies' field.
      * @return This builder.
      */
    public com.training.pojos.generatedSources.PojoUserAvro.Builder clearHobbies() {
      hobbies = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PojoUserAvro build() {
      try {
        PojoUserAvro record = new PojoUserAvro();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.favorite_number = fieldSetFlags()[1] ? this.favorite_number : (java.lang.Integer) defaultValue(fields()[1]);
        record.favorite_color = fieldSetFlags()[2] ? this.favorite_color : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.language = fieldSetFlags()[3] ? this.language : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.nativePlace = fieldSetFlags()[4] ? this.nativePlace : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.hobbies = fieldSetFlags()[5] ? this.hobbies : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PojoUserAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<PojoUserAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PojoUserAvro>
    READER$ = (org.apache.avro.io.DatumReader<PojoUserAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
